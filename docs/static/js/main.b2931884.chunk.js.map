{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/error.js","actions/login.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","helpers/fileUpload.js","actions/notes.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/notesReducer.js","store/store.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","removeError","finishLoading","login","uid","displayName","loginWithEmailAndPassWord","email","password","dispatch","signInWithEmailAndPassword","then","user","catch","console","log","Swal","fire","message","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","name","value","LoginScreen","formValues","useDispatch","loading","useSelector","state","className","onSubmit","e","preventDefault","v","isEmail","isEmpty","valida","placeholder","onChange","autoComplete","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","ui","password2","undefined","escape","includes","length","validation","createUserWithEmailAndPassword","a","updateProfile","registerWithEmailAndPassword","AuthRouter","exact","path","component","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","id","note","saveInFirestore","getState","url","noteToFirestore","doc","update","startLoadingNotes","loadNotes","collection","get","notesSnap","notes","forEach","snapHijo","push","data","setNotes","deleteNote","NotesAppBar","active","date","momentDate","moment","format","refUploadPicture","useRef","style","display","files","title","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","ref","current","click","NoteScreen","activeId","activeNoteId","useEffect","delete","NothingSelected","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","isAutenticated","Component","rest","props","PrivateRoute","AppRouter","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"gPAcEA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,8CAQT,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASW,KAAKC,mB,iBCnBlCC,EACF,eADEA,EAED,gBAFCA,EAIC,iBAJDA,EAKI,oBALJA,EAOO,qBAPPA,EAQQ,sBARRA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0BCdZC,EAAW,SAACC,GAAD,MACpB,CACIC,KAAMH,EACNI,QAASF,IAIJG,EAAc,iBACvB,CACIF,KAAMH,IAQDM,EAAgB,iBAAO,CAChCH,KAAMH,ICNGO,EAAQ,SAACC,EAAKC,GAAN,MAAsB,CACvCN,KAAMH,EACNI,QAAS,CACLI,IAAKA,EACLC,YAAaA,KAQRC,EAA4B,SAACC,EAAOC,GAC7C,OAAO,SAACC,GACJA,EDb2B,CAC/BV,KAAMH,ICaFb,IAASW,OAAOgB,2BAA2BH,EAAOC,GAC7CG,MAAM,YAAa,IAAVC,EAAS,EAATA,KACNH,EAAUN,EAAOS,EAAKR,IAAKQ,EAAKP,cAChCI,EAAUP,QAGZW,OAAM,SAAAf,GACJgB,QAAQC,IAAIjB,GACZW,EAAUP,KACVc,IAAKC,KAAK,QAASnB,EAAIoB,QAAS,c,eCpCnCC,EAAU,WAAsB,IAArBC,EAAoB,uDAAP,GAEjC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAA+B,IAA7BC,EAA4B,uDAAjBL,EACvBG,EAAUE,IAGRC,EAAoB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAExBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAIhC,MAAO,CAACP,EAAQI,EAAmBF,I,wBCV1BM,EAAc,WAEvB,IAKA,EAA0CX,EALtB,CAChBZ,MAAO,kBACPC,SAAU,WAGd,mBAAQuB,EAAR,KAAoBL,EAApB,KAEQnB,EAAoBwB,EAApBxB,MAAOC,EAAauB,EAAbvB,SAETC,EAAWuB,cAETC,EAAYC,aAAa,SAAAC,GAAK,OAAIA,EAAMzC,QAAxCuC,QA6BR,OACI,qCACI,oBAAIG,UAAU,cAAd,mBAEA,uBAAMC,SAjBM,SAACC,GACjBA,EAAEC,iBAfS,SAAEhC,EAAOC,GAEpB,OAAKgC,IAAEC,QAAQlC,GAGJiC,IAAEE,QAAQlC,IACjBC,EAAUZ,EAAU,yBACb,IAGXY,EAAUR,MACH,IARHQ,EAAUZ,EAAU,sBACb,GAaP8C,CAAOpC,EAAOC,IACdC,EAAUH,EAA2BC,EAAOC,KAa5C,UAEI,uBACIT,KAAK,QACL6C,YAAY,QACZhB,KAAK,QACLQ,UAAU,cACVP,MAAQtB,EACRsC,SAAWnB,EACXoB,aAAa,QACjB,uBACI/C,KAAK,WACL6C,YAAY,WACZhB,KAAK,WACLC,MAAQrB,EACRqC,SAAWnB,EACXU,UAAU,gBAEd,wBACQrC,KAAK,SACLqC,UAAU,4BACVW,SAAWd,EAHnB,oBAOA,sBAAKG,UAAU,wBAAf,UACI,2DACA,sBACIA,UAAU,aACVY,QAtCM,WACtBvC,GFxCG,SAAEA,GACL1B,IAASW,OAAOuD,gBAAiBxD,GAC5BkB,MAAM,YAAa,IAAXC,EAAU,EAAVA,KACLH,EAAUN,EAAOS,EAAKR,IAAKQ,EAAKP,qBEwE5B,UAII,qBAAK+B,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcc,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGf,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CACIgB,GAAG,iBACHhB,UAAU,OAFd,uCCtFHiB,EAAiB,WAE1B,IAOM5C,EAAWuB,cAETsB,EAAapB,aAAa,SAAAC,GAAK,OAAIA,EAAMoB,MAAzCD,SAER,EAAyCnC,EAXjB,CACpBS,KAAM,WACNrB,MAAO,kBACPC,SAAU,SACVgD,UAAW,WAOf,mBAAQzB,EAAR,KAAoBL,EAApB,KAEQE,EAAsCG,EAAtCH,KAAOrB,EAA+BwB,EAA/BxB,MAAOC,EAAwBuB,EAAxBvB,SAAUgD,EAAczB,EAAdyB,UAqChC,OACI,qCACI,oBAAIpB,UAAU,cAAd,sBAGiB,OAAbkB,EAEA,qBAAKlB,UAAU,oBAAf,SAAqCkB,SAErCG,EAGJ,uBAAMpB,SA1BS,SAACC,GACpBA,EAAEC,iBAtBa,SAACX,EAAMrB,EAAOC,EAAUgD,GAEvC,OAAIhB,IAAEE,QAAQd,IACVnB,EAAUZ,EAAS,6BACZ,GACA2C,IAAEkB,OAAO9B,GAAM+B,SAAS,MAC/BlD,EAASZ,EAAS,iCACX,GACC2C,IAAEC,QAAQlC,GAGXC,IAAagD,GAAahD,EAASoD,OAAS,GACnDnD,EAASZ,EAAS,2BACX,IAGXY,EAASR,MAEF,IATHQ,EAASZ,EAAS,gCACX,GAcIgE,CAAWjC,EAAMrB,EAAOC,EAAUgD,IAI7C/C,EHNgC,SAAEF,EAAOC,EAAUH,GAC3D,OAAO,SAACI,GACJ1B,IAASW,OAAOoE,+BAAgCvD,EAAOC,GAClDG,KADL,uCACW,6BAAAoD,EAAA,6DAAOnD,EAAP,EAAOA,KAAP,SACGA,EAAKoD,cAAc,CACrB3D,YAAaA,IAFd,OAIHI,EAAUN,EAAMS,EAAKR,IAAKQ,EAAKP,cAJ5B,2CADX,uDAMOQ,OAAM,SAAAf,GACLkB,IAAKC,KAAK,QAASnB,EAAIoB,QAAS,aGH3B+C,CAA6B1D,EAAOC,EAAUoB,KAmBvD,UACI,uBACI7B,KAAK,OACL6C,YAAY,OACZhB,KAAK,OACLQ,UAAU,cACVP,MAAQD,EACRiB,SAAWnB,EACXoB,aAAa,QACjB,uBACI/C,KAAK,QACL6C,YAAY,QACZhB,KAAK,QACLQ,UAAU,cACVP,MAAQtB,EACRsC,SAAWnB,EACXoB,aAAa,QACjB,uBACI/C,KAAK,WACL6C,YAAY,WACZhB,KAAK,WACLC,MAAQrB,EACRqC,SAAWnB,EACXU,UAAU,gBAEd,uBACIrC,KAAK,WACL6C,YAAY,mBACZhB,KAAK,YACLC,MAAQ2B,EACRX,SAAWnB,EACXU,UAAU,gBAEd,wBACQrC,KAAK,SACLqC,UAAU,iCAFlB,uBAOA,cAAC,IAAD,CACIgB,GAAG,cACHhB,UAAU,OAFd,4CCrGH8B,EAAa,WAEtB,OACI,qBAAK9B,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,cAAcC,UAAYvC,IAE5C,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,iBAAiBC,UAAYhB,IAE/C,cAAC,IAAD,CAAUD,GAAG,wB,iBCrBpBkB,EAAU,uCAAG,WAAMC,GAAN,mBAAAR,EAAA,6DAEtBjD,QAAQC,IAAIwD,GAEK,oDAEXC,EAAW,IAAIC,UAEZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQH,EAAK,IATP,kBAaCI,MATN,mDASuB,CAChCC,OAAQ,OACRC,KAAML,IAfQ,YAaZM,EAbY,QAkBTC,GAlBS,kCAmBUD,EAAKE,OAnBf,eAmBRC,EAnBQ,yBAoBPA,EAAUC,YApBH,yBAsBFJ,EAAKE,OAtBH,oJAAH,sDCsBVG,EAAa,SAAEC,EAAIC,GAAN,MAAgB,CACtCtF,KAAMH,EACNI,QAAQ,aACJoF,MACGC,KAIEC,EAAkB,SAAED,GAC7B,8CAAO,WAAO5E,EAAU8E,GAAjB,iBAAAxB,EAAA,6DAEK3D,EAAQmF,IAAW7F,KAAnBU,IAEJiF,EAAKG,YACEH,EAAKG,WAGVC,EARH,eAQyBJ,IACLD,GATpB,SAWG7F,EAAGmG,IAAH,UAAUtF,EAAV,0BAAgCiF,EAAKD,KAAOO,OAAQF,GAXvD,OAaHzE,IAAKC,KACD,SACA,sBACA,WAGJR,EAASmF,EAAkBxF,IAnBxB,2CAAP,yDAyBSyF,EAAS,uCAAG,WAAOzF,GAAP,iBAAA2D,EAAA,sEAEGxE,EAAGuG,WAAH,UAAkB1F,EAAlB,mBAAwC2F,MAF3C,cAEfC,EAFe,OAIfC,EAAQ,GAEdD,EAAUE,SAAS,SAAAC,GAEfF,EAAMG,KAAK,CACPhB,GAAIe,EAASf,GACbC,KAAMc,EAASE,YAVF,kBAcdJ,GAdc,2CAAH,sDAiBhBK,EAAW,SAAEL,GAAF,MAAY,CACzBlG,KAAMH,EACNI,QAASiG,IAGAL,EAAoB,SAAExF,GAC/B,8CAAO,WAAOK,GAAP,eAAAsD,EAAA,sEACiB8B,EAAWzF,GAD5B,OACG6F,EADH,OAEHxF,EAAS6F,EAAUL,IAFhB,2CAAP,uDA2CSM,EAAa,SAAEnB,GAAF,MAAU,CAChCrF,KAAMH,EACNI,QAASoF,ICvHAoB,EAAc,WAEvB,IAAM/F,EAAWuB,cAETyE,EAAWvE,aAAa,SAAAC,GAAK,OAAIA,EAAM8D,SAAvCQ,OAEAC,EAASD,EAATC,KAEFC,EAAaC,IAAOF,GAAMG,OAAO,sBAUjCC,EAAmBC,iBAAO,MAiBhC,OACI,sBAAK3E,UAAU,gBAAf,UACI,+BAAQuE,IAER,uBACI5G,KAAK,OACLiH,MAAO,CAACC,QAAS,QACjBpE,SAhBa,SAACP,GAEtB,IAAMiC,EAAOjC,EAAEX,OAAOuF,MAEnB3C,GACC9D,EDiDkB,SAAE8D,GAC5B,8CAAO,WAAO9D,EAAU8E,GAAjB,iBAAAxB,EAAA,6DACaoB,EAAeI,IAAWU,MAAlCQ,OAERzF,IAAKC,KAAK,CACNkG,MAAO,eACPC,KAAM,iBACNC,mBAAmB,EACnBC,aAAc,WACVtG,IAAKuG,iBARV,SAYmBjD,EAAWC,GAZ9B,OAYGiD,EAZH,OAaHrC,EAAWK,IAAMgC,EAEjB/G,EAAU6E,EAAiBH,IAE3BnE,IAAKyG,QAjBF,2CAAP,wDClDkBC,CAAenD,KAYrBoD,IAAMb,IAEV,gCACI,wBACI1E,UAAU,MACVY,QA5BW,WACvB8D,EAAiBc,QAAQC,QACzB/G,QAAQC,IAAI,YAwBJ,qBAKA,wBACIqB,UAAU,MACVY,QAzCG,WAEfvC,EAAU6E,EAAiBmB,KAqCnB,yBClDHqB,GAAa,WAEtB,IAAMrH,EAAWuB,cAETyE,EAAWvE,aAAa,SAAAC,GAAK,OAAIA,EAAM8D,SAAvCQ,OACR,EAAgDtF,EAASsF,GAAzD,mBAAQ1E,EAAR,KAAoBL,EAApB,KAAuCF,EAAvC,KACYuG,EAA+BhG,EAAnCqD,GAAc+B,EAAqBpF,EAArBoF,MAAOtC,EAAc9C,EAAd8C,KAAMW,EAAQzD,EAARyD,IAC7BwC,EAAejB,iBAAQN,EAAOrB,IAEpC6C,qBAAU,WACFxB,EAAOrB,KAAO4C,EAAaJ,UAC3BpG,EAAMiF,GACNuB,EAAaJ,QAAUnB,EAAOrB,MAEnC,CAACqB,EAAQjF,IAEZyG,qBAAU,WAENxH,EAAU0E,EAAY4C,EAAF,eAAgBhG,OAErC,CAACgG,EAAUtH,EAAUsB,IAUxB,OACI,sBAAKK,UAAU,sBAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UAEI,uBACIrC,KAAK,OACL6B,KAAK,QACLgB,YAAY,qBACZR,UAAU,qBACVU,aAAa,MACbD,SAAWnB,EACXG,MAASsF,IAEb,0BACIvE,YAAY,sBACZhB,KAAK,OACLQ,UAAU,kBACVS,SAAWnB,EACXG,MAAQgD,IAGZ,qBAAKzC,UAAU,eAAf,SAGQoD,GACA,qBACI5D,KAAK,MACLsB,IAAMsC,EACNrC,IAAI,gBAQpB,wBACIf,UAAU,iBACVY,QAhDS,WFiFI,IAACoC,EE/EtB3E,GF+EsB2E,EE/EC2C,EFgF3B,uCAAO,WAAMtH,EAAU8E,GAAhB,eAAAxB,EAAA,6DAEG3D,EAAMmF,IAAW7F,KAAKU,IAFzB,SAIOb,EAAGmG,IAAH,UAAUtF,EAAV,0BAA+BgF,IAAM8C,SAJ5C,OAMCzH,EAAU8F,EAAYnB,IANvB,2CAAP,2DEpCQ,wBCxEC+C,GAAkB,WAC3B,OACI,sBAAK/F,UAAU,wBAAf,UACI,iDAEI,uBAFJ,yBAMA,mBAAGA,UAAU,+BCiDVgG,GAtDM,SAAC,GAAoB,IAAjBhD,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,KAElBqB,EAA0BrB,EAA1BqB,KAAMS,EAAoB9B,EAApB8B,MAAOtC,EAAaQ,EAAbR,KAAMW,EAAOH,EAAPG,IAEpB/E,EAAWuB,cAWjB,OACI,mCACA,sBACII,UAAU,yBACVY,QAba,WAEjBvC,EAAU0E,EAAWC,EAAI,CACrBsB,OAAMS,QAAOtC,OAAMW,UAQvB,UAKQA,GACA,qBACIpD,UAAU,wBACV4E,MAAO,CACHqB,eAAgB,QAChBC,gBAAgB,OAAD,OAAS9C,EAAT,QAKvB,sBAAKpD,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACM+E,IAEN,mBAAG/E,UAAU,yBAAb,SACMyC,OAGV,sBAAKzC,UAAU,0BAAf,UACI,qCAASwE,IAAOF,GAAMG,OAAO,QAA7B,OACA,6BAAMD,IAAOF,GAAMG,OAAO,iBC3CjC0B,GAAiB,WAE1B,IAAQtC,EAAU/D,aAAa,SAAAC,GAAK,OAAIA,EAAM8D,SAAtCA,MAER,OACI,qBAAK7D,UAAU,mBAAf,SAEQ6D,EAAMuC,KAAK,SAAAnD,GAAI,OACX,cAAC,GAAD,eAESA,GADCA,EAAKD,UCPtBqD,GAAU,WAEnB,IAAMhI,EAAWuB,cAQTJ,EAASM,aAAa,SAAAC,GAAK,OAAIA,EAAMzC,QAArCkC,KAMR,OACI,wBAAOQ,UAAU,mBAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAASR,QAGb,wBACIQ,UAAU,MACVY,QAvBK,WACjBvC,EZUoB,CACxBV,KAAMH,IYVFb,IAASW,OAAOgJ,UAChBjI,ENiHyB,CAC7BV,KAAMH,KMhGM,uBAOJ,sBACIwC,UAAU,qBACVY,QAtBW,WACnBvC,ENbJ,uCAAO,WAAMA,EAAU8E,GAAhB,mBAAAxB,EAAA,6DACK3D,EAAQmF,IAAW7F,KAAnBU,IAEFuI,EAAU,CACZxB,MAAO,GACPtC,KAAM,GACN6B,MAAM,IAAIkC,MAAOC,WANlB,SASetJ,EAAGuG,WAAH,UAAiB1F,EAAjB,mBAAsC0I,IAAKH,GAT1D,OASGjD,EATH,OAWHjF,EAAU0E,EAAYO,EAAIN,GAAIuD,IAX3B,2CAAP,0DMgCQ,UAGI,mBAAGvG,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAKJ,cAAC,GAAD,QC1CC2G,GAAgB,WAEzB,IAAQtC,EAAWvE,aAAa,SAAAC,GAAK,OAAIA,EAAM8D,SAAvCQ,OAER,OACI,sBAAKrE,UAAU,wBAAf,UACI,cAAC,GAAD,IAEA,+BAGmB,OAAXqE,EAEA,cAAC,GAAD,IAEA,cAAC,GAAD,U,2CCKLuC,GAtBK,SAAC,GAId,IAHHC,EAGE,EAHFA,eACUC,EAER,EAFF7E,UACG8E,EACD,mBACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBF,eAAiBA,EAAiB5E,UAAY,SAAC+E,GAAD,OAC1DH,EAID,cAAC,IAAD,CAAU7F,GAAG,MAFb,cAAC8F,EAAD,eAAeE,S,kCCiBZC,GA1BM,SAAC,GAIf,IAHHJ,EAGE,EAHFA,eACWC,EAET,EAFF7E,UACG8E,EACD,mBAEF,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBF,eAAiBA,EAAiB5E,UAAY,SAAC+E,GAAD,OAC3DH,EAEA,cAACC,EAAD,eAAeE,IAEf,cAAC,IAAD,CAAUhG,GAAG,qBCAZkG,GAAY,WAErB,IAAM7I,EAAWuB,cACjB,EAAkCX,oBAAS,GAA3C,mBAAOkI,EAAP,KAAkBC,EAAlB,KACA,EAAoCnI,oBAAS,GAA7C,mBAAOoI,EAAP,KAAmBC,EAAnB,KAoBA,OAlBAzB,qBAAU,WAENlJ,IAASW,OAAOiK,mBAAhB,uCAAoC,WAAO/I,GAAP,SAAAmD,EAAA,uDAEhC,OAAGnD,QAAH,IAAGA,OAAH,EAAGA,EAAMR,MACLK,EAAUN,EAAOS,EAAKR,IAAMQ,EAAKP,cACjCqJ,GAAc,GAEdjJ,EAAUmF,EAAkBhF,EAAKR,OAGjCsJ,GAAc,GAGlBF,GAAa,GAZmB,2CAApC,yDAcD,IAEAD,EAEK,qDAKJ,mCACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAaN,eAAiBQ,EAAarF,KAAK,QAAQC,UAAYH,IACpE,cAAC,GAAD,CAAc+E,eAAiBQ,EAAatF,OAAK,EAACC,KAAK,IAAIC,UAAY0E,KAEvE,cAAC,IAAD,CAAU3F,GAAG,0B,kBCpD/BhC,GAAe,CACjBa,SAAS,EACTqB,SAAU,M,SCFRlC,GAAe,CACjB6E,MAAO,GACPQ,OAAQ,MCENmD,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BvK,KFFuB,WAAkC,IAAjCyC,EAAgC,uDAAxBf,GAAc8I,EAAU,uCACxD,OAAQA,EAAOnK,MACX,KAAKH,EACD,MAAO,CACHQ,IAAK8J,EAAOlK,QAAQI,IACpBwB,KAAMsI,EAAOlK,QAAQK,aAG7B,KAAKT,EACD,MAAO,GAEX,KAAKA,EACD,OAAO,2BACAuC,GADP,IAEIF,SAAS,IAGjB,KAAKrC,EACD,OAAO,2BACAuC,GADP,IAEIF,SAAS,IAIjB,QACI,OAAOE,IEtBfoB,GF2B2B,WAAkC,IAAjCpB,EAAgC,uDAAxBf,GAAc8I,EAAU,uCAC5D,OAAQA,EAAOnK,MACX,KAAKH,EACD,OAAO,2BACAuC,GADP,IAEImB,SAAU4G,EAAOlK,UAGzB,KAAKJ,EACD,OAAO,2BACAuC,GADP,IAEImB,SAAU,OAIlB,QACI,OAAOnB,IE1Cf8D,MDJwB,WAAmC,IAAjC9D,EAAgC,uDAAxBf,GAAc8I,EAAU,uCAE1D,OAAQA,EAAOnK,MACX,KAAKH,EACG,OAAO,2BACAuC,GADP,IAEIsE,OAAO,eACAyD,EAAOlK,WAI1B,KAAKJ,EACD,OAAO,2BACAuC,GADP,IAEI8D,MAAM,aACCiE,EAAOlK,WAItB,KAAKJ,EACD,OAAO,2BACAuC,GADP,IAEI8D,MAAO9D,EAAM8D,MAAMuC,KACf,SAAAnD,GAAI,OAAIA,EAAKD,KAAO8E,EAAOlK,QAAQoF,GACzB8E,EAAOlK,QAAQqF,KACfA,OAItB,KAAKzF,EACD,OAAO,2BACAuC,GADP,IAEIsE,OAAQ,KACRR,MAAO9D,EAAM8D,MAAMkE,QAAQ,SAAA9E,GAAI,OAAIA,EAAKD,KAAO8E,EAAOlK,aAG9D,KAAKJ,EAED,OADAkB,QAAQC,IAAI,QACL,2BACAoB,GADP,IAEIsE,OAAO,KACPR,MAAO,KAGf,QACI,OAAO9D,MCtCNiI,GAAQC,aACWL,GACAJ,GAAiBU,aAAgBC,QCXpDC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCFZK,IAASC,OAEL,cAAC,GAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.b2931884.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBs83t5w1fUf2D8BrnUympYsu1_rYykUNM\",\r\n    authDomain: \"react-journal-app-130a3.firebaseapp.com\",\r\n    projectId: \"react-journal-app-130a3\",\r\n    storageBucket: \"react-journal-app-130a3.appspot.com\",\r\n    messagingSenderId: \"491678825489\",\r\n    appId: \"1:491678825489:web:0c851a1d160eca62e885b0\"\r\n  };\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  {/* <script src=\"https://www.gstatic.com/firebasejs/8.7.1/firebase-app.js\"></script> */}\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n  }","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    setError: '[UI] Set Error',\r\n    removeError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) =>(\r\n    {\r\n        type: types.setError,\r\n        payload: err\r\n    }\r\n);\r\n\r\nexport const removeError = () =>(\r\n    {\r\n        type: types.removeError\r\n    }\r\n);\r\n\r\nexport const startLoading = ( ) =>({\r\n    type: types.uiStartLoading    \r\n});\r\n\r\nexport const finishLoading = ( ) =>({\r\n    type: types.uiFinishLoading    \r\n});","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from \"./error\";\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return ( dispatch ) =>{\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) => {\r\n                dispatch( login( user.uid, user.displayName ))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) =>({\r\n    type: types.login,\r\n    payload: {\r\n        uid: uid,\r\n        displayName: displayName\r\n    }\r\n});\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})\r\n\r\nexport const loginWithEmailAndPassWord = (email, password) =>{\r\n    return (dispatch)=>{\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user })=>{\r\n                dispatch( login( user.uid, user.displayName ));\r\n                dispatch( finishLoading() );\r\n            }\r\n                \r\n            ).catch(err => {\r\n                console.log(err);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', err.message, 'error');\r\n            })\r\n        \r\n\r\n            \r\n\r\n    }\r\n}\r\n\r\nexport const registerWithEmailAndPassword = ( email, password, displayName ) =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({user}) =>{\r\n                await user.updateProfile({\r\n                    displayName: displayName\r\n                });\r\n                dispatch( login(user.uid, user.displayName))\r\n            }).catch(err =>{\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    }\r\n}","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newState = initialState) => { \r\n        setValues(newState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })              \r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginWithEmailAndPassWord, startGoogleLogin } from '../../actions/login';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport v from \"validator\";\r\nimport { removeError, setError } from '../../actions/error';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const initialForm = {\r\n        email: 'nando@gmail.com',\r\n        password: '123456'\r\n    };\r\n    \r\n    const [ formValues, handleInputChange ] = useForm( initialForm );\r\n\r\n    const { email, password } = formValues;\r\n    \r\n    const dispatch = useDispatch();    \r\n\r\n    const { loading } = useSelector( state => state.auth );\r\n\r\n    const valida = ( email, password ) =>{\r\n\r\n        if( !v.isEmail(email)){\r\n            dispatch( setError( 'Email incorrecto' ) );\r\n            return false;\r\n        } else if( v.isEmpty(password) ){\r\n            dispatch( setError( 'Password incorrecto' ) );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError());\r\n        return true;\r\n    }\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( valida(email, password) ){\r\n            dispatch( loginWithEmailAndPassWord( email, password ));\r\n        } \r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={ handleLogin }>\r\n\r\n                <input \r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                    autoComplete=\"off\" />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                    className=\"auth__input\" />\r\n\r\n                <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled={ loading }\r\n                > Login\r\n                </button>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from '../../hooks/useForm';\r\nimport v from \"validator\";\r\nimport { removeError, setError } from '../../actions/error';\r\nimport { registerWithEmailAndPassword } from '../../actions/login';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const initialRegister = {\r\n        name: 'Hernando',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange] = useForm( initialRegister );\r\n\r\n    const { name , email, password, password2 } = formValues;\r\n\r\n    const validation = (name, email, password, password2) =>{\r\n\r\n        if( v.isEmpty(name)){\r\n            dispatch( setError('Debe ingresar un nombre'));\r\n            return false;\r\n        } else if( v.escape(name).includes(\";\") ){\r\n            dispatch(setError('Ingrese un nombre válido'))\r\n            return false;\r\n        } else if( !v.isEmail(email) ){\r\n            dispatch(setError('Ingrese un email válido'));\r\n            return false;\r\n        } else if( password !== password2 || password.length < 5 ){\r\n            dispatch(setError('Passwords incorrectos'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const valida = validation(name, email, password, password2);\r\n        \r\n\r\n        if( valida ){\r\n            dispatch(registerWithEmailAndPassword(email, password, name));\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            {\r\n                msgError !== null \r\n                ?\r\n                <div className=\"auth__alert-error\">{ msgError }</div>\r\n                :\r\n                undefined\r\n            }\r\n\r\n            <form onSubmit={ handleRegister }>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                    autoComplete=\"off\" />\r\n                <input \r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                    autoComplete=\"off\" />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                    className=\"auth__input\" />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                    className=\"auth__input\" />\r\n\r\n                <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block mb-5\"\r\n                > Register\r\n                </button>         \r\n                \r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    ¿Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import { LoginScreen } from \"../components/auth/LoginScreen\";\r\n  import { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={ LoginScreen } />\r\n\r\n                    <Route exact path='/auth/register' component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const fileUpload = async(file) =>{\r\n\r\n    console.log(file)\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dqmvbqdop/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file[0]);\r\n\r\n    try{\r\n\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch(err){\r\n        throw err;\r\n    }\r\n\r\n    // return URL\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const addNewNotes = () =>{\r\n    return async(dispatch, getState) =>{\r\n        const { uid } = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ))\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) =>({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const saveInFirestore = ( note ) =>{\r\n    return async( dispatch, getState) =>{\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n        \r\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        Swal.fire(\r\n            'Saving',\r\n            'Your note was saved',\r\n            'success'\r\n          );\r\n\r\n        dispatch(startLoadingNotes(uid));\r\n        \r\n    }\r\n} \r\n\r\n\r\nexport const loadNotes = async( uid ) =>{\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo =>{\r\n        \r\n        notes.push({\r\n            id: snapHijo.id,\r\n            note: snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n};\r\n\r\nconst setNotes = ( notes )=>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) =>{\r\n    return async (dispatch) =>{\r\n        const notes = await loadNotes( uid );        \r\n        dispatch(setNotes( notes ));\r\n    }\r\n}\r\n\r\nexport const startUploading = ( file ) =>{\r\n    return async( dispatch, getState ) =>{\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () =>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( saveInFirestore( activeNote ))\r\n\r\n        Swal.close();\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async(dispatch, getState) =>{\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n            await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n            dispatch( deleteNote( id ) );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) =>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const logoutNotes = () =>({\r\n    type: types.notesLogoutCleaning,\r\n})\r\n","import React, { useRef } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { saveInFirestore, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const { date } = active;\r\n\r\n    const momentDate = moment(date).format(\"dddd, MMMM Do YYYY\");\r\n\r\n   \r\n\r\n    const handleSave = () =>{\r\n        \r\n        dispatch( saveInFirestore( active ) );\r\n        \r\n    }\r\n\r\n    const refUploadPicture = useRef(null)\r\n\r\n    const handlePictureClick = () =>{\r\n        refUploadPicture.current.click();\r\n        console.log(\"Picture\");\r\n\r\n    }\r\n\r\n    const handleFileChange = (e) =>{\r\n\r\n        const file = e.target.files;\r\n\r\n        if(file){\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ momentDate }</span>\r\n\r\n            <input \r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n                ref={ refUploadPicture } />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }>\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }>\r\n                    Save\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset] = useForm( active );\r\n    const { id: activeId, title, body, url } = formValues;\r\n    const activeNoteId = useRef( active.id )\r\n\r\n    useEffect(() => {\r\n        if( active.id !== activeNoteId.current){\r\n            reset(active);\r\n            activeNoteId.current = active.id;\r\n        }\r\n    }, [active, reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( activeId, {...formValues}) );\r\n        \r\n    }, [activeId, dispatch, formValues]);\r\n\r\n    const handleDelete = ( ) =>{\r\n\r\n        dispatch(startDeleting(activeId));\r\n\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value= { title }\r\n                />\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    name='body'\r\n                    className=\"notes__textarea\"\r\n                    onChange={ handleInputChange }\r\n                    value={ body }\r\n                ></textarea>\r\n\r\n                <div className=\"notes__image\">\r\n                    \r\n                    {\r\n                        url &&\r\n                        <img\r\n                            name='url'\r\n                            src={ url }\r\n                            alt=\"imagen\" />\r\n                    }\r\n                    \r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-context\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeNote } from \"../../actions/notes\";\r\n\r\nconst JournalEntry = ( { id, note } ) => {\r\n\r\n    const {date, title, body, url} = note;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleActive = () =>{\r\n\r\n        dispatch( activeNote(id, {\r\n            date, title, body, url\r\n        }) \r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div \r\n            className=\"journal__entry pointer\"\r\n            onClick={ handleActive }>\r\n\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal_entry-picture\"\r\n                    style={{\r\n                        backgroundSize: \"cover\",\r\n                        backgroundImage: `url(${url})`\r\n                    }}></div>\r\n            }\r\n            \r\n\r\n                <div className=\"journal__entry-body\">\r\n                    <p className=\"journal__entry-title\">\r\n                        { title }\r\n                    </p>\r\n                    <p className=\"journal__entry-content\">\r\n                        { body } \r\n                    </p>\r\n                </div>\r\n                <div className=\"journal__entry-date-box\">\r\n                    <span> { moment(date).format('dddd') } </span>\r\n                    <h4>{ moment(date).format('Do') }</h4>\r\n                </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nJournalEntry.propTypes = {\r\n\r\n}\r\n\r\nexport default JournalEntry\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport JournalEntry from './JournalEntry';\r\n\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note } />\r\n                )\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { firebase } from \"../../firebase/firebase-config\";\r\nimport { logout } from '../../actions/login';\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { addNewNotes, logoutNotes } from '../../actions/notes';\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch( logout() );\r\n        firebase.auth().signOut();\r\n        dispatch( logoutNotes() );\r\n    }\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleAddEntry = () => {\r\n        dispatch( addNewNotes() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddEntry }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { SideBar } from './SideBar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n    \r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <SideBar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    active !== null \r\n                    ?\r\n                    <NoteScreen />\r\n                    :\r\n                    <NothingSelected />                    \r\n                }\r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({\r\n    isAutenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} isAutenticated={ isAutenticated } component={ (props)=>(\r\n            !isAutenticated\r\n            ?\r\n            <Component {...props} />\r\n            :\r\n            <Redirect to=\"/\" />\r\n        ) } />\r\n\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest} isAutenticated={ isAutenticated } component={ (props) => (\r\n            isAutenticated\r\n            ?\r\n            <Component {...props} />\r\n            :\r\n            <Redirect to=\"/auth/login\" />\r\n        )} \r\n\r\n            \r\n        />\r\n            \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { login } from '../actions/login';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async (user) =>{\r\n            \r\n            if(user?.uid){\r\n                dispatch( login( user.uid , user.displayName ));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch( startLoadingNotes(user.uid) );\r\n               \r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setIsLoading(false);            \r\n        })\r\n    }, []);\r\n\r\n    if(isLoading){\r\n        return (\r\n            <h1>Espere por favor...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute isAutenticated={ isLoggedIn } path='/auth' component={ AuthRouter }/>\r\n                        <PrivateRoute isAutenticated={ isLoggedIn } exact path=\"/\" component={ JournalScreen }/>\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n\r\n        case types.logout:\r\n            return { };\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const registerReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.setError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n\r\n        case types.removeError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            };\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n                return {\r\n                    ...state,\r\n                    active: {\r\n                        ...action.payload,\r\n                    }\r\n                }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...action.payload,\r\n                ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                            ? action.payload.note\r\n                            : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            console.log(\"Hola\")\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer, registerReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: registerReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n                                reducers, \r\n                                composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />            \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport \"./styles/styles.scss\";\n\n\nReactDOM.render(\n  \n    <JournalApp />,\n  \n  document.getElementById('root')\n);"],"sourceRoot":""}